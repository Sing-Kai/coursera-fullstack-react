[{"C:\\Users\\sk\\source\\repos\\CoureraFullStackReact\\confusion\\src\\reportWebVitals.js":"1","C:\\Users\\sk\\source\\repos\\CoureraFullStackReact\\confusion\\src\\App.js":"2","C:\\Users\\sk\\source\\repos\\CoureraFullStackReact\\confusion\\src\\index.js":"3","C:\\Users\\sk\\source\\repos\\CoureraFullStackReact\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\sk\\source\\repos\\CoureraFullStackReact\\confusion\\src\\shared\\dishes.js":"5","C:\\Users\\sk\\source\\repos\\CoureraFullStackReact\\confusion\\src\\components\\DishdetailComponent.js":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":637,"mtime":1606770234347,"results":"9","hashOfConfig":"8"},{"size":504,"mtime":1606770213295,"results":"10","hashOfConfig":"8"},{"size":1288,"mtime":1606692871715,"results":"11","hashOfConfig":"8"},{"size":6065,"mtime":1606678211159,"results":"12","hashOfConfig":"8"},{"size":2206,"mtime":1606772326090,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12kevr5",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"C:\\Users\\sk\\source\\repos\\CoureraFullStackReact\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\sk\\source\\repos\\CoureraFullStackReact\\confusion\\src\\App.js",[],"C:\\Users\\sk\\source\\repos\\CoureraFullStackReact\\confusion\\src\\index.js",[],"C:\\Users\\sk\\source\\repos\\CoureraFullStackReact\\confusion\\src\\components\\MenuComponent.js",["29","30","31"],"import React, {Component} from 'react';\r\nimport {Media} from 'reactstrap';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,CardTitle } from 'reactstrap';\r\nimport DishDetail from './DishdetailComponent';\r\n\r\n\r\nclass Menu extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedDish: null\r\n        };\r\n    }\r\n\r\n    onDishSelect(dish){\r\n        this.setState({selectedDish: dish});\r\n    }\r\n\r\n    render(){\r\n        const menu = this.props.dishes.map((dish)=> {\r\n            return (\r\n                <div className=\"col-12 col-md-5 m-1\">\r\n\r\n                    <Card key={dish.id} onClick={() => this.onDishSelect(dish)}>\r\n                        <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                        <CardImgOverlay>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                        </CardImgOverlay>\r\n                    </Card>\r\n\r\n              </div>\r\n            );\r\n        });\r\n\r\n        return(\r\n            <div className =\"container\">\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n                <DishDetail dish = {this.state.selectedDish} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Menu;",["32","33"],"C:\\Users\\sk\\source\\repos\\CoureraFullStackReact\\confusion\\src\\shared\\dishes.js",[],"C:\\Users\\sk\\source\\repos\\CoureraFullStackReact\\confusion\\src\\components\\DishdetailComponent.js",["34"],"import React, {Component} from 'react';\r\nimport { Card, CardImg, CardText, CardBody,CardTitle } from 'reactstrap';\r\n\r\nclass DishDetail extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    renderDish(dish){\r\n        if(dish != null){\r\n\r\n            return(\r\n                <Card>\r\n                    <CardImg top src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n\r\n        }else{\r\n            return(<div></div>);\r\n        }\r\n    }\r\n\r\n    convertDate(dateISO){\r\n\r\n        const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"June\",\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n        let date = new Date(dateISO);\r\n        let year = date.getFullYear('YY');\r\n        let month = date.getMonth();\r\n        let dt = date.getDate();\r\n\r\n        if (dt < 10) {\r\n            dt = '0' + dt;\r\n          }\r\n\r\n\r\n        return  monthNames[month] + ' ' + dt + ', ' + year;\r\n    }\r\n\r\n    renderComments(comments){\r\n\r\n        if(comments != null){\r\n        const commentList = comments.map((d)=> {return(<li key={d.id}><p>{d.comment}</p> <p>--{d.author}, {this.convertDate(d.date)}</p></li>);})\r\n            return(\r\n                <div>\r\n                    <h4>Comments</h4>\r\n                    <ul className = \"list-unstyled\">\r\n                        {commentList}\r\n                    </ul>\r\n                </div>\r\n            );\r\n\r\n        }else{\r\n            return(<div></div>);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n        const dish = this.props.dish;\r\n\r\n        let comments = [];\r\n\r\n        if(dish != null){\r\n            comments = dish.comments;\r\n        }\r\n\r\n        return(\r\n\r\n            <div className=\"row\">\r\n                <div  className=\"col-12 col-md-5 m-1\">\r\n                    {this.renderDish(dish)}\r\n                </div>\r\n                <div  className=\"col-12 col-md-5 m-1\">\r\n                    {this.renderComments(comments)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default DishDetail;",{"ruleId":"35","severity":1,"message":"36","line":2,"column":9,"nodeType":"37","messageId":"38","endLine":2,"endColumn":14},{"ruleId":"35","severity":1,"message":"39","line":3,"column":41,"nodeType":"37","messageId":"38","endLine":3,"endColumn":49},{"ruleId":"35","severity":1,"message":"40","line":3,"column":51,"nodeType":"37","messageId":"38","endLine":3,"endColumn":59},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":6,"column":5,"nodeType":"47","messageId":"48","endLine":8,"endColumn":6},"no-unused-vars","'Media' is defined but never used.","Identifier","unusedVar","'CardText' is defined but never used.","'CardBody' is defined but never used.","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]